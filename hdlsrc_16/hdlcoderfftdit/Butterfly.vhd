-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc_16\hdlcoderfftdit\Butterfly.vhd
-- Created: 2016-12-17 21:37:37
-- 
-- Generated by MATLAB 9.1 and HDL Coder 3.9
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Butterfly
-- Source Path: hdlcoderfftdit/HDLFFTDUT/HDL FFT
-- Hierarchy Level: 2
-- 
-- Instantiate a Twiddle Table Component
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Butterfly IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        twiddle_re                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        twiddle_im                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        multin_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        multin_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        dmultin_re                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        dmultin_im                        :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        bfin2sel                          :   IN    std_logic;
        bfin1_re                          :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        bfin1_im                          :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        dbfout1_re                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dbfout1_im                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dbfout_2_re                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dbfout_2_im                       :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
        );
END Butterfly;


ARCHITECTURE rtl OF Butterfly IS

  -- Signals
  SIGNAL twiddle_re_signed                : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL twiddle_im_signed                : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL multin_re_signed                 : signed(15 DOWNTO 0);  -- int16
  SIGNAL multin_im_signed                 : signed(15 DOWNTO 0);  -- int16
  SIGNAL dmultin_re_signed                : signed(15 DOWNTO 0);  -- int16
  SIGNAL dmultin_im_signed                : signed(15 DOWNTO 0);  -- int16
  SIGNAL bfin1_re_signed                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL bfin1_im_signed                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL dbfout1_re_tmp                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dbfout1_im_tmp                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL dbfout_2_re_tmp                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL dbfout_2_im_tmp                  : signed(15 DOWNTO 0);  -- int16
  SIGNAL multout_re                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL multout_im                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL dmultout_re                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL dmultout_im                      : signed(15 DOWNTO 0);  -- int16
  SIGNAL bfin2_re                         : signed(15 DOWNTO 0);  -- int16
  SIGNAL bfin2_im                         : signed(15 DOWNTO 0);  -- int16
  SIGNAL mul_re1                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_re2                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_im1                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_im2                          : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_d_re1                        : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_d_re2                        : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_d_im1                        : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_d_im2                        : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_d_re1_cast                   : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_d_re2_cast                   : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_d_im1_cast                   : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_d_im2_cast                   : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL mul_temp                         : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mul_temp_1                       : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL sub_cast                         : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL sub_cast_1                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL sub_temp                         : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL mul_temp_2                       : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL mul_temp_3                       : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL add_cast                         : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL add_cast_1                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL add_temp                         : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL bfout1_re                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL bfout1_im                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL bfout2_re                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL bfout2_im                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL buffer1_re                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL buffer1_im                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL buffer2_re                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL buffer2_im                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL bfin1_cast_re                    : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL bfin1_cast_im                    : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL bfin2_cast_re                    : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL bfin2_cast_im                    : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL add_cast_2                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL add_cast_3                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL add_temp_1                       : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL add_cast_4                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL add_cast_5                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL add_temp_2                       : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL sub_cast_2                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL sub_cast_3                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL sub_temp_1                       : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL sub_cast_4                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL sub_cast_5                       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL sub_temp_2                       : signed(16 DOWNTO 0);  -- sfix17

BEGIN
  twiddle_re_signed <= signed(twiddle_re);

  twiddle_im_signed <= signed(twiddle_im);

  multin_re_signed <= signed(multin_re);

  multin_im_signed <= signed(multin_im);

  dmultin_re_signed <= signed(dmultin_re);

  dmultin_im_signed <= signed(dmultin_im);

  bfin1_re_signed <= signed(bfin1_re);

  bfin1_im_signed <= signed(bfin1_im);

  -- Instantiate a Twiddle Table Component
  -- Twiddle Factor Multiply
  mul_temp <= multin_re_signed * twiddle_re_signed;
  mul_re1 <= (15 => '0', OTHERS => '1') WHEN mul_temp(31) = '0' AND mul_temp(30) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN mul_temp(31) = '1' AND mul_temp(30) /= '1'
      ELSE (mul_temp(30 DOWNTO 15));

  mul_temp_1 <= multin_im_signed * twiddle_im_signed;
  mul_re2 <= (15 => '0', OTHERS => '1') WHEN mul_temp_1(31) = '0' AND mul_temp_1(30) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN mul_temp_1(31) = '1' AND mul_temp_1(30) /= '1'
      ELSE (mul_temp_1(30 DOWNTO 15));

  temp_process22_Delay_dre1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mul_d_re1 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        mul_d_re1 <= mul_re1;
      END IF;
    END IF;
  END PROCESS temp_process22_Delay_dre1;

  temp_process23_Delay_dre2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mul_d_re2 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        mul_d_re2 <= mul_re2;
      END IF;
    END IF;
  END PROCESS temp_process23_Delay_dre2;

  mul_d_re1_cast <= mul_d_re1;

  mul_d_re2_cast <= mul_d_re2;

  sub_cast <= mul_d_re1_cast;
  sub_cast_1 <= mul_d_re2_cast;
  sub_temp <= resize(sub_cast, 17) - resize(sub_cast_1, 17);
  multout_re <= (15 => '0', OTHERS => '1') WHEN sub_temp(16) = '0' AND sub_temp(15) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN sub_temp(16) = '1' AND sub_temp(15) /= '1'
      ELSE (sub_temp(15 DOWNTO 0));

  mul_temp_2 <= multin_im_signed * twiddle_re_signed;
  mul_im1 <= (15 => '0', OTHERS => '1') WHEN mul_temp_2(31) = '0' AND mul_temp_2(30) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN mul_temp_2(31) = '1' AND mul_temp_2(30) /= '1'
      ELSE (mul_temp_2(30 DOWNTO 15));

  mul_temp_3 <= multin_re_signed * twiddle_im_signed;
  mul_im2 <= (15 => '0', OTHERS => '1') WHEN mul_temp_3(31) = '0' AND mul_temp_3(30) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN mul_temp_3(31) = '1' AND mul_temp_3(30) /= '1'
      ELSE (mul_temp_3(30 DOWNTO 15));

  temp_process24_Delay_dim1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mul_d_im1 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        mul_d_im1 <= mul_im1;
      END IF;
    END IF;
  END PROCESS temp_process24_Delay_dim1;

  temp_process25_Delay_dim2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      mul_d_im2 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        mul_d_im2 <= mul_im2;
      END IF;
    END IF;
  END PROCESS temp_process25_Delay_dim2;

  mul_d_im1_cast <= mul_d_im1;

  mul_d_im2_cast <= mul_d_im2;

  add_cast <= mul_d_im1_cast;
  add_cast_1 <= mul_d_im2_cast;
  add_temp <= resize(add_cast, 17) + resize(add_cast_1, 17);
  multout_im <= (15 => '0', OTHERS => '1') WHEN add_temp(16) = '0' AND add_temp(15) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN add_temp(16) = '1' AND add_temp(15) /= '1'
      ELSE (add_temp(15 DOWNTO 0));

  dmultout_re <= multout_re;
  dmultout_im <= multout_im;

  bfin2_re <= dmultout_re WHEN ( bfin2sel > '0' ) ELSE
              dmultin_re_signed;
  bfin2_im <= dmultout_im WHEN ( bfin2sel > '0' ) ELSE
              dmultin_im_signed;

  -- Butterfly Computation 
  bfin1_cast_re <= bfin1_re_signed;
  bfin1_cast_im <= bfin1_im_signed;

  bfin2_cast_re <= bfin2_re;
  bfin2_cast_im <= bfin2_im;

  add_cast_2 <= bfin1_re_signed;
  add_cast_3 <= bfin2_re;
  add_temp_1 <= resize(add_cast_2, 17) + resize(add_cast_3, 17);
  buffer1_re <= (15 => '0', OTHERS => '1') WHEN add_temp_1(16) = '0' AND add_temp_1(15) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN add_temp_1(16) = '1' AND add_temp_1(15) /= '1'
      ELSE (add_temp_1(15 DOWNTO 0));

  add_cast_4 <= bfin1_im_signed;
  add_cast_5 <= bfin2_im;
  add_temp_2 <= resize(add_cast_4, 17) + resize(add_cast_5, 17);
  buffer1_im <= (15 => '0', OTHERS => '1') WHEN add_temp_2(16) = '0' AND add_temp_2(15) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN add_temp_2(16) = '1' AND add_temp_2(15) /= '1'
      ELSE (add_temp_2(15 DOWNTO 0));

  sub_cast_2 <= bfin1_re_signed;
  sub_cast_3 <= bfin2_re;
  sub_temp_1 <= resize(sub_cast_2, 17) - resize(sub_cast_3, 17);
  buffer2_re <= (15 => '0', OTHERS => '1') WHEN sub_temp_1(16) = '0' AND sub_temp_1(15) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN sub_temp_1(16) = '1' AND sub_temp_1(15) /= '1'
      ELSE (sub_temp_1(15 DOWNTO 0));

  sub_cast_4 <= bfin1_im_signed;
  sub_cast_5 <= bfin2_im;
  sub_temp_2 <= resize(sub_cast_4, 17) - resize(sub_cast_5, 17);
  buffer2_im <= (15 => '0', OTHERS => '1') WHEN sub_temp_2(16) = '0' AND sub_temp_2(15) /= '0'
      ELSE (15 => '1', OTHERS => '0') WHEN sub_temp_2(16) = '1' AND sub_temp_2(15) /= '1'
      ELSE (sub_temp_2(15 DOWNTO 0));

  bfout1_re <= buffer1_re;
  bfout1_im <= buffer1_im;

  bfout2_re <= buffer2_re;
  bfout2_im <= buffer2_im;

  temp_process26_Delay_butterfly1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dbfout1_re_tmp <= (OTHERS => '0');
      dbfout1_im_tmp <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        dbfout1_re_tmp <= bfout1_re;
        dbfout1_im_tmp <= bfout1_im;
      END IF;
    END IF;
  END PROCESS temp_process26_Delay_butterfly1;

  temp_process27_Delay_butterfly2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dbfout_2_re_tmp <= (OTHERS => '0');
      dbfout_2_im_tmp <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        dbfout_2_re_tmp <= bfout2_re;
        dbfout_2_im_tmp <= bfout2_im;
      END IF;
    END IF;
  END PROCESS temp_process27_Delay_butterfly2;


  dbfout1_re <= std_logic_vector(dbfout1_re_tmp);

  dbfout1_im <= std_logic_vector(dbfout1_im_tmp);

  dbfout_2_re <= std_logic_vector(dbfout_2_re_tmp);

  dbfout_2_im <= std_logic_vector(dbfout_2_im_tmp);

END rtl;

