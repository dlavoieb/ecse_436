-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc_16\hdlcoderfftdit\DualPortRam0.vhd
-- Created: 2016-12-14 11:10:45
-- Generated by MATLAB 9.1 and HDL Coder 3.9
-- 
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DualPortRam0
-- Source Path: hdlcoderfftdit/HDLFFTDUT/HDL FFT
-- 
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DualPortRam0 is
  PORT( clk                             :   IN    std_logic;
        clk_enable                      :   IN    std_logic;
        wr_din_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        wr_din_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        wr_addr                         :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        wr_en                           :   IN    std_logic;
        rd_addr                         :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        wr_dout_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        wr_dout_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        rd_dout_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        rd_dout_im                      :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16
        );
END DualPortRam0;


ARCHITECTURE rtl OF DualPortRam0 IS

  TYPE ram_type IS ARRAY (7 DOWNTO 0) of std_logic_vector(31 DOWNTO 0);

  -- Signals
  SIGNAL ram                            : ram_type := (OTHERS => "00000000000000000000000000000000");
  SIGNAL dout_a                         : std_logic_vector(31 DOWNTO 0) := "00000000000000000000000000000000";
  SIGNAL dout_b                         : std_logic_vector(31 DOWNTO 0) := "00000000000000000000000000000000";
  SIGNAL addr_a                         : unsigned(2 DOWNTO 0);
  SIGNAL addr_b                         : unsigned(2 DOWNTO 0);

BEGIN

  addr_a <= unsigned(wr_addr);
  addr_b <= unsigned(rd_addr);

  DualPortRam0_process : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        IF wr_en = '1' THEN
          ram(to_integer(addr_a)) <= wr_din_re & wr_din_im;
          dout_a <= wr_din_re & wr_din_im;
        ELSE
          dout_a <= ram(to_integer(addr_a));
        END IF;
        dout_b <= ram(to_integer(addr_b));
      END IF;
    END IF;
  END PROCESS DualPortRam0_process;

  wr_dout_re <= dout_a(31 DOWNTO 16);
  wr_dout_im <= dout_a(15 DOWNTO 0);
  rd_dout_re <= dout_b(31 DOWNTO 16);
  rd_dout_im <= dout_b(15 DOWNTO 0);

END rtl;

